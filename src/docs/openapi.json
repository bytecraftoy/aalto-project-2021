{
    "openapi": "",
    "info": { "title": "", "version": "" },
    "paths": {
        "/api/edge/:id": {
            "get": {
                "summary": "Get edges",
                "description": "Fetch edges from the project 'id'",
                "responses": { "200": { "description": "OK" } }
            }
        },
        "/api/edge/:source/:target": {
            "delete": {
                "description": "Delete an edge connected to 'source' and 'target'",
                "summary": "Delete an edge",
                "responses": { "200": { "description": "OK" } }
            }
        },
        "/api/edge": {
            "post": {
                "summary": "Create an edge",
                "description": "Create a new  **edge**",
                "requestBody": { "required": true },
                "responses": {
                    "200": { "description": "OK" },
                    "403": { "description": "Forbidden" }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "summary": "Create a user",
                "description": "Register a new user in the application. Emails and Usernames are unique. In addition usernames are not case sensitive",
                "responses": {
                    "200": { "description": "OK" },
                    "403": { "description": "Forbidden" }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "-": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "summary": "Login to the application",
                "description": "Given correct credentials server sends back a json web token which is then used to authenticate the user.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/Login" }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": { "description": "OK" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" }
                }
            }
        },
        "/api/user/validity": {
            "post": {
                "summary": "Check JSON web tokens validity",
                "description": "Endpoint used to check whether the JSON web token on the clients side is still valid.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "-": {
                            "schema": { "$ref": "#/components/schemas/Token" }
                        }
                    }
                },
                "responses": { "200": { "description": "OK" } }
            }
        }
    },
    "components": {
        "schemas": {
            "Register": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Username for the account. Usernames are unique and not case sensitive. Can be used to login"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the account. The server will then hash it and save it in the database."
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the account. Emails are unique and can later be used to log in."
                    }
                },
                "xml": { "name": "Register" }
            },
            "Login": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string | null",
                        "description": "Email address that is connected to an already registered account. Will be primarily used to login. If value is null, login will be done using the username"
                    },
                    "username": {
                        "type": "string | null",
                        "description": "Username that was used to create the account. If email is not given, username will be used to authenticate the user"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the account in plain text. Hashing of this password and comparison with the registered hash will happen on the server"
                    }
                },
                "xml": { "name": "Login" }
            },
            "Token": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of the logged in user."
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of the logged in user."
                    },
                    "token": {
                        "type": "string",
                        "description": "The token created by the backend when the user logged in the first time."
                    }
                },
                "xml": { "name": "Token" }
            }
        }
    }
}
